<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Slnfgen.CLI</name>
    </assembly>
    <members>
        <member name="T:Slnfgen.CLI.IRequestHandler`2">
            <summary>
            </summary>
            <typeparam name="TRequest">Type of the request object</typeparam>
            <typeparam name="TResponse">Type of the returned response object</typeparam>
        </member>
        <member name="M:Slnfgen.CLI.IRequestHandler`2.Handle(`0)">
            <summary>
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:Slnfgen.CLI.IRequestHandler`1">
            <summary>
            </summary>
            <typeparam name="TRequest"></typeparam>
        </member>
        <member name="T:Slnfgen.CLI.AutomaticValidationRequestHandlerDecorator`2">
            <summary>
                Automatic validation request handler that validates the request using FluentValidation
                Intended to be used as a decorator for other request
            </summary>
            <typeparam name="TIn"></typeparam>
            <typeparam name="TOut"></typeparam>
        </member>
        <member name="T:Slnfgen.CLI.Application.Repository.Solution.Project.ProjectFileLoader">
            <summary>
            </summary>
        </member>
        <member name="M:Slnfgen.CLI.Application.Repository.Solution.Project.ProjectFileLoader.LoadOne(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Slnfgen.CLI.Application.Repository.Solution.Project.ProjectFileLoader.LoadFromDirectory(System.String)">
             <summary>
            
             </summary>
             <param name="directory"></param>
             <returns></returns>
        </member>
        <member name="T:Slnfgen.CLI.Application.Features.SolutionFilter.Requests.GenerateSolutionFiltersRequest">
            <summary>
            </summary>
        </member>
        <member name="M:Slnfgen.CLI.Application.Features.SolutionFilter.Requests.GenerateSolutionFiltersRequest.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            </summary>
            <param name="filtersConfigFilePath"></param>
            <param name="outputDirectory"></param>
            <param name="dryRun"></param>
        </member>
        <member name="P:Slnfgen.CLI.Application.Features.SolutionFilter.Requests.GenerateSolutionFiltersRequest.DryRun">
            <summary>
            </summary>
        </member>
        <member name="P:Slnfgen.CLI.Application.Features.SolutionFilter.Requests.GenerateSolutionFiltersRequest.FiltersConfigFilePath">
            <summary>
            </summary>
        </member>
        <member name="P:Slnfgen.CLI.Application.Features.SolutionFilter.Requests.GenerateSolutionFiltersRequest.OutputDirectory">
            <summary>
            </summary>
        </member>
        <member name="M:Slnfgen.CLI.Application.Features.SolutionFilter.Requests.GenerateSolutionFiltersRequest.Equals(Slnfgen.CLI.Application.Features.SolutionFilter.Requests.GenerateSolutionFiltersRequest)">
            <inheritdoc />
        </member>
        <member name="M:Slnfgen.CLI.Application.Features.SolutionFilter.Requests.GenerateSolutionFiltersRequest.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Slnfgen.CLI.Application.Features.SolutionFilter.Requests.GenerateSolutionFiltersRequest.GetHashCode">
            <inheritdoc />
        </member>
        <member name="T:Slnfgen.CLI.Application.Services.SolutionFilter.GenerateSolutionFiltersRequestHandler">
            <summary>
                Generate a Solution Filter file
            </summary>
        </member>
        <member name="M:Slnfgen.CLI.Application.Services.SolutionFilter.GenerateSolutionFiltersRequestHandler.#ctor(Slnfgen.Application.Features.SolutionFilterGeneration.SolutionFilterGenerator,Slnfgen.Application.Features.SolutionFilterGeneration.ISolutionFilterWriter,Slnfgen.Application.Domain.Filters.ISolutionFiltersManifestLoader,Slnfgen.CLI.Domain.Solution.File.Loader.ISolutionLoader,Microsoft.Extensions.Logging.ILogger{Slnfgen.CLI.Application.Services.SolutionFilter.GenerateSolutionFiltersRequestHandler})">
            <inheritdoc cref="T:Slnfgen.CLI.Application.Services.SolutionFilter.GenerateSolutionFiltersRequestHandler" />
        </member>
        <member name="M:Slnfgen.CLI.Application.Services.SolutionFilter.GenerateSolutionFiltersRequestHandler.Handle(Slnfgen.CLI.Application.Features.SolutionFilter.Requests.GenerateSolutionFiltersRequest)">
            <summary>
            </summary>
            <param name="request"></param>
        </member>
        <member name="T:Slnfgen.CLI.Application.Requests.SolutionFilter.Generate.GenerateSolutionFiltersResponse">
            <summary>
            </summary>
        </member>
        <member name="M:Slnfgen.CLI.Application.Requests.SolutionFilter.Generate.GenerateSolutionFiltersResponse.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            </summary>
            <param name="generatedFilters"></param>
        </member>
        <member name="P:Slnfgen.CLI.Application.Requests.SolutionFilter.Generate.GenerateSolutionFiltersResponse.GeneratedFilters">
            <summary>
            </summary>
        </member>
        <member name="M:Slnfgen.CLI.Application.Requests.SolutionFilter.Generate.GenerateSolutionFiltersResponse.Equals(Slnfgen.CLI.Application.Requests.SolutionFilter.Generate.GenerateSolutionFiltersResponse)">
            <inheritdoc />
        </member>
        <member name="M:Slnfgen.CLI.Application.Requests.SolutionFilter.Generate.GenerateSolutionFiltersResponse.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Slnfgen.CLI.Application.Requests.SolutionFilter.Generate.GenerateSolutionFiltersResponse.GetHashCode">
            <inheritdoc />
        </member>
        <member name="T:Slnfgen.CLI.Domain.Solution.File.Loader.SolutionFileLoader">
            <summary>
            </summary>
        </member>
        <member name="M:Slnfgen.CLI.Domain.Solution.File.Loader.SolutionFileLoader.Load(System.String)">
            <summary>
            </summary>
            <param name="location"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="T:Slnfgen.CLI.Domain.Solution.File.Loader.ISolutionLoader">
            <summary>
            </summary>
        </member>
        <member name="M:Slnfgen.CLI.Domain.Solution.File.Loader.ISolutionLoader.Load(System.String)">
            <summary>
            </summary>
            <param name="location"></param>
            <returns></returns>
        </member>
        <member name="T:Slnfgen.CLI.Domain.Solution.DependencyInjection">
            <summary>
            </summary>
        </member>
        <member name="M:Slnfgen.CLI.Domain.Solution.DependencyInjection.AddDomainSolutionDependencies(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="T:Slnfgen.CLI.Domain.Solution.Project.ProjectFile">
            <summary>
                A wrapper for a project file (.csproj) that provides access to its properties and project references.
            </summary>
        </member>
        <member name="F:Slnfgen.CLI.Domain.Solution.Project.ProjectFile.FileExtension">
            <summary>
                The file extension for project files - only .csproj files are supported
            </summary>
        </member>
        <member name="M:Slnfgen.CLI.Domain.Solution.Project.ProjectFile.#ctor(Microsoft.Build.Construction.ProjectRootElement)">
            <inheritdoc cref="T:Slnfgen.CLI.Domain.Solution.Project.ProjectFile" />
        </member>
        <member name="P:Slnfgen.CLI.Domain.Solution.Project.ProjectFile.FullPath">
            <summary>
                The absolute path of the project file
            </summary>
        </member>
        <member name="P:Slnfgen.CLI.Domain.Solution.Project.ProjectFile.ProjectDependencies">
            <summary>
                All project (path) references defined in the project file
            </summary>
        </member>
        <member name="T:Slnfgen.CLI.Domain.Solution.Project.Repositories.IProjectFileLoader">
            <summary>
            </summary>
        </member>
        <member name="M:Slnfgen.CLI.Domain.Solution.Project.Repositories.IProjectFileLoader.LoadOne(System.String)">
            <summary>
            </summary>
            <param name="location">Absolute or relative path to the project</param>
            <returns></returns>
        </member>
        <member name="M:Slnfgen.CLI.Domain.Solution.Project.Repositories.IProjectFileLoader.LoadFromDirectory(System.String)">
             <summary>
            
             </summary>
             <param name="directory"></param>
             <returns></returns>
        </member>
        <member name="T:Slnfgen.CLI.Presentation.Commands.GenerateSolutionFiltersCommand">
            <summary>
                The command to generate solution filters from a filters manifest file
            </summary>
        </member>
        <member name="M:Slnfgen.CLI.Presentation.Commands.GenerateSolutionFiltersCommand.#ctor(Slnfgen.CLI.IRequestHandler{Slnfgen.CLI.Application.Features.SolutionFilter.Requests.GenerateSolutionFiltersRequest,Slnfgen.CLI.Application.Requests.SolutionFilter.Generate.GenerateSolutionFiltersResponse},Microsoft.Extensions.Logging.ILogger{Slnfgen.CLI.Presentation.Commands.GenerateSolutionFiltersCommand})">
            <inheritdoc cref="T:Slnfgen.CLI.Presentation.Commands.GenerateSolutionFiltersCommand" />
            <param name="handler">The request Handler</param>
            <param name="logger">Logger for </param>
        </member>
        <member name="M:Slnfgen.CLI.Presentation.Commands.GenerateSolutionFiltersCommand.Execute(System.String,System.String,System.Boolean)">
            <summary>
                Generates solution filters based on the provided filters file
            </summary>
            <param name="filtersFile"></param>
            <param name="outDirectory"></param>
            <param name="dryRun"></param>
        </member>
        <member name="T:Slnfgen.CLI.Presentation.Filters.DebugFilter">
            <summary>
                A command filter that launches the debugger when a command is executed.
            </summary>
        </member>
        <member name="T:Slnfgen.CLI.Presentation.Filters.ExceptionFilter">
            <summary>
                Exception filter for handling unhandled exceptions and validation errors in the CLI application.
            </summary>
        </member>
        <member name="T:Slnfgen.CLI.Presentation.StartUp.ServiceCollectionExtensions">
            <summary>
                Extensions for adding dependencies directly to the Services in the application builder
                of the program
            </summary>
        </member>
        <member name="M:Slnfgen.CLI.Presentation.StartUp.ServiceCollectionExtensions.AddAllDependencies(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
                Add all dependencies to a service collection
            </summary>
            <param name="services">Service Collection coming from the application builder</param>
            <returns>The same service collection with dependencies added</returns>
        </member>
        <member name="T:Slnfgen.Application.Module.Common.Types.Unit">
            <summary>
                Unit type, used to represent a void return type in a more explicit way.
            </summary>
        </member>
        <member name="F:Slnfgen.Application.Module.Common.Types.Unit.Value">
            <summary>
            </summary>
        </member>
        <member name="T:Slnfgen.Application.Domain.Filters.SolutionFiltersManifestFileLoader">
            <summary>
            </summary>
        </member>
        <member name="M:Slnfgen.Application.Domain.Filters.SolutionFiltersManifestFileLoader.Load(System.String)">
            <summary>
            </summary>
            <param name="filterFilePath"></param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="T:Slnfgen.Application.Domain.Filters.SolutionFiltersManifest">
            <summary>
                The manifest definition for declaring solution filters belonging to a solution
            </summary>
        </member>
        <member name="M:Slnfgen.Application.Domain.Filters.SolutionFiltersManifest.#ctor">
            <inheritdoc cref="T:Slnfgen.Application.Domain.Filters.SolutionFiltersManifest" />
        </member>
        <member name="M:Slnfgen.Application.Domain.Filters.SolutionFiltersManifest.#ctor(System.String,System.Collections.Generic.List{Slnfgen.Application.Domain.Filters.SolutionFiltersManifestFilterDefinition})">
            <inheritdoc cref="T:Slnfgen.Application.Domain.Filters.SolutionFiltersManifest" />
        </member>
        <member name="P:Slnfgen.Application.Domain.Filters.SolutionFiltersManifest.SolutionFile">
            <summary>
                The relative path to the solution file which the manifest builds upon
            </summary>
        </member>
        <member name="P:Slnfgen.Application.Domain.Filters.SolutionFiltersManifest.FilterDefinitions">
            <summary>
                The list of solution filters with entrypoints
            </summary>
        </member>
        <member name="T:Slnfgen.Application.Domain.Filters.SolutionFiltersManifestFilterDefinition">
            <summary>
            </summary>
        </member>
        <member name="M:Slnfgen.Application.Domain.Filters.SolutionFiltersManifestFilterDefinition.#ctor">
            <summary>
            </summary>
        </member>
        <member name="M:Slnfgen.Application.Domain.Filters.SolutionFiltersManifestFilterDefinition.#ctor(System.String,System.String[])">
            <summary>
            </summary>
            <param name="name"></param>
            <param name="entrypoints"></param>
        </member>
        <member name="P:Slnfgen.Application.Domain.Filters.SolutionFiltersManifestFilterDefinition.Name">
            <summary>
            </summary>
        </member>
        <member name="P:Slnfgen.Application.Domain.Filters.SolutionFiltersManifestFilterDefinition.Entrypoints">
            <summary>
            </summary>
        </member>
        <member name="T:Slnfgen.Application.Domain.Filters.ISolutionFiltersManifestLoader">
            <summary>
            </summary>
        </member>
        <member name="M:Slnfgen.Application.Domain.Filters.ISolutionFiltersManifestLoader.Load(System.String)">
            <summary>
            </summary>
            <param name="location"></param>
            <returns></returns>
        </member>
        <member name="T:Slnfgen.Application.Domain.Project.SolutionProject">
            <summary>
                Wrapper for a project in a solution file.
            </summary>
        </member>
        <member name="M:Slnfgen.Application.Domain.Project.SolutionProject.#ctor(Microsoft.Build.Construction.ProjectInSolution)">
            <summary>
            </summary>
            <param name="projectInSolution"></param>
        </member>
        <member name="P:Slnfgen.Application.Domain.Project.SolutionProject.Name">
            <summary>
            </summary>
        </member>
        <member name="P:Slnfgen.Application.Domain.Project.SolutionProject.Path">
            <summary>
            </summary>
        </member>
        <member name="M:Slnfgen.Application.Domain.Project.SolutionProject.Equals(Slnfgen.Application.Domain.Project.SolutionProject)">
            <inheritdoc />
        </member>
        <member name="M:Slnfgen.Application.Domain.Project.SolutionProject.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Slnfgen.Application.Domain.Project.SolutionProject.GetHashCode">
            <inheritdoc />
        </member>
        <member name="T:Slnfgen.Application.Features.SolutionFilterGeneration.SolutionFilterFileLoader">
             <summary>
            
             </summary>
        </member>
        <member name="M:Slnfgen.Application.Features.SolutionFilterGeneration.SolutionFilterFileLoader.LoadOne(System.String)">
             <summary>
            
             </summary>
             <param name="filePath"></param>
             <returns></returns>
             <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:Slnfgen.Application.Features.SolutionFilterGeneration.SolutionFilterFileLoader.LoadMany(System.String)">
             <summary>
            
             </summary>
             <param name="directoryPath"></param>
             <returns></returns>
        </member>
        <member name="T:Slnfgen.Application.Features.SolutionFilterGeneration.SolutionFilterFileWriter">
            <summary>
            </summary>
        </member>
        <member name="M:Slnfgen.Application.Features.SolutionFilterGeneration.SolutionFilterFileWriter.Write(Slnfgen.Application.Features.SolutionFilter.SolutionFilter,System.String)">
            <summary>
            </summary>
            <param name="solutionFilter"></param>
            <param name="outDirectory"></param>
        </member>
        <member name="M:Slnfgen.Application.Features.SolutionFilterGeneration.SolutionFilterFileWriter.WriteMany(System.Collections.Generic.IEnumerable{Slnfgen.Application.Features.SolutionFilter.SolutionFilter},System.String)">
            <summary>
            </summary>
            <param name="solutionFilters"></param>
            <param name="outDirectory"></param>
        </member>
        <member name="T:Slnfgen.Application.Features.SolutionFilterGeneration.ISolutionFilterWriter">
            <summary>
            </summary>
        </member>
        <member name="M:Slnfgen.Application.Features.SolutionFilterGeneration.ISolutionFilterWriter.Write(Slnfgen.Application.Features.SolutionFilter.SolutionFilter,System.String)">
            <summary>
            </summary>
            <param name="solutionFilter"></param>
            <param name="outDirectory"></param>
        </member>
        <member name="M:Slnfgen.Application.Features.SolutionFilterGeneration.ISolutionFilterWriter.WriteMany(System.Collections.Generic.IEnumerable{Slnfgen.Application.Features.SolutionFilter.SolutionFilter},System.String)">
            <summary>
            </summary>
            <param name="solutionFilters"></param>
            <param name="outDirectory"></param>
        </member>
        <member name="T:Slnfgen.Application.Features.SolutionFilterGeneration.SolutionFilterGenerator">
            <summary>
            </summary>
        </member>
        <member name="M:Slnfgen.Application.Features.SolutionFilterGeneration.SolutionFilterGenerator.#ctor(Slnfgen.CLI.Domain.Solution.Project.Repositories.IProjectFileLoader)">
            <inheritdoc cref="T:Slnfgen.Application.Features.SolutionFilterGeneration.SolutionFilterGenerator"/>
        </member>
        <member name="M:Slnfgen.Application.Features.SolutionFilterGeneration.SolutionFilterGenerator.GenerateMany(Slnfgen.Application.Features.Solution.RootSolutionFile,Slnfgen.Application.Domain.Filters.SolutionFiltersManifest,System.String)">
            <summary>
            </summary>
            <param name="solutionFile"></param>
            <param name="filters"></param>
            <param name="targetDirectory"></param>
            <returns></returns>
        </member>
        <member name="T:Slnfgen.Application.Features.SolutionFilter.SolutionFiltersManifestSolutionDefinition">
            <summary>
            </summary>
        </member>
        <member name="M:Slnfgen.Application.Features.SolutionFilter.SolutionFiltersManifestSolutionDefinition.#ctor(System.String,System.String[])">
            <summary>
            </summary>
            <param name="path"></param>
            <param name="projects"></param>
        </member>
        <member name="P:Slnfgen.Application.Features.SolutionFilter.SolutionFiltersManifestSolutionDefinition.Path">
            <summary>
            </summary>
        </member>
        <member name="P:Slnfgen.Application.Features.SolutionFilter.SolutionFiltersManifestSolutionDefinition.Projects">
            <summary>
            </summary>
        </member>
        <member name="T:Slnfgen.Application.Features.SolutionFilter.SolutionFilter">
            <summary>
                The `.slnf` file as required by .NET
            </summary>
        </member>
        <member name="F:Slnfgen.Application.Features.SolutionFilter.SolutionFilter.FileExtension">
            <summary>
                File extension for solution filter files
            </summary>
        </member>
        <member name="M:Slnfgen.Application.Features.SolutionFilter.SolutionFilter.#ctor(System.String,Slnfgen.Application.Features.SolutionFilter.SolutionFiltersManifestSolutionDefinition)">
            <inheritdoc cref="T:Slnfgen.Application.Features.SolutionFilter.SolutionFilter" />
            <param name="name"></param>
            <param name="solution"></param>
        </member>
        <member name="P:Slnfgen.Application.Features.SolutionFilter.SolutionFilter.Name">
            <summary>
            </summary>
        </member>
        <member name="P:Slnfgen.Application.Features.SolutionFilter.SolutionFilter.Solution">
            <summary>
            </summary>
        </member>
        <member name="M:Slnfgen.Application.Features.SolutionFilter.SolutionFilter.GetFileName">
            <summary>
                The name of the solution filter file, which is the name of the filter with the `.slnf` extension
            </summary>
        </member>
        <member name="T:Slnfgen.Application.Features.Solution.RootSolutionFile">
            <summary>
                Wrapper around the MSBuild Solution File
            </summary>
        </member>
        <member name="M:Slnfgen.Application.Features.Solution.RootSolutionFile.#ctor(Microsoft.Build.Construction.SolutionFile,System.String)">
            <inheritdoc cref="T:Slnfgen.Application.Features.Solution.RootSolutionFile" />
            <param name="solutionFile">The MSBuild loaded solution file</param>
            <param name="absolutePath"></param>
        </member>
        <member name="M:Slnfgen.Application.Features.Solution.RootSolutionFile.#ctor(System.String)">
            <summary>
                This constructor will load the solution file from an absolute path.
            </summary>
            <param name="absolutePath"></param>
        </member>
        <member name="P:Slnfgen.Application.Features.Solution.RootSolutionFile.AbsolutePath">
            <summary>
                The absolute path of the solution file.
            </summary>
            <exception cref="T:System.IO.DirectoryNotFoundException"></exception>
        </member>
        <member name="P:Slnfgen.Application.Features.Solution.RootSolutionFile.ParentDirectory">
            <summary>
                The parent directory of the solution file.
            </summary>
        </member>
        <member name="P:Slnfgen.Application.Features.Solution.RootSolutionFile.FileName">
            <summary>
                The file name (path excluded)
            </summary>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="P:Slnfgen.Application.Features.Solution.RootSolutionFile.ProjectsInSolution">
            <summary>
                Gets the projects declared in the solution file.
            </summary>
        </member>
        <member name="T:Slnfgen.Application.Features.Solution.SolutionFileConstants">
            <summary>
                Constants for solution file operations.
            </summary>
        </member>
        <member name="F:Slnfgen.Application.Features.Solution.SolutionFileConstants.FileExtension">
            <summary>
                Standard file extension for solution files.
            </summary>
        </member>
        <member name="F:Slnfgen.Application.Features.Solution.SolutionFileConstants.XmlFileExtension">
            <summary>
                Alternative file extension for solution files, used for XML-based solutions (introduced in .NET 8).
            </summary>
        </member>
        <member name="F:Slnfgen.Application.Features.Solution.SolutionFileConstants.SupportedFileExtensions">
            <summary>
                All supported file extensions for solution files.
            </summary>
        </member>
    </members>
</doc>
