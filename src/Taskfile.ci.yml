# To use this taskfile, please install from https://taskfile.dev/installation/
# List all available commands with `task --list-all`
version: "3"

tasks:
  build:
    desc: Build the source code (.NET) with packages cached
    vars:
      CONFIGURATION: '{{.CONFIGURATION| default "Release"}}' # Debug or Release
    cmds:
      - dotnet restore src/Slnfgen.slnx --locked-mode
      - dotnet build src/Slnfgen.slnx --no-restore -c {{ .CONFIGURATION }}

  restore-tools:
    desc: Restore the .NET tools required for the project
    cmds:
      - dotnet tool restore --tool-manifest .config/dotnet-tools.json

  test:
    desc: Run all tests associated with the source code using the TRX logger and coverage collection
    vars:
      CONFIGURATION: '{{.CONFIGURATION| default "Release"}}' # Debug or Release
    cmds:
      - dotnet test src/Slnfgen.slnx --no-restore --verbosity normal -c {{ .CONFIGURATION }} --logger "trx;LogFileName=test-results.trx" --collect:"XPlat Code Coverage" /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura

  pack:
    desc: Pack the source code into a NuGet package
    vars:
      CONFIGURATION: '{{.CONFIGURATION| default "Release"}}' # Debug or Release
    deps:
      - build
    cmds:
      - for: ["Slnfgen.CLI"]
        cmd: dotnet pack src/app/{{ .ITEM }}/{{ .ITEM }}.csproj -c {{ .CONFIGURATION }} -o ./artifacts --no-build
    generates:
      - ./artifacts/Slnfgen.nupkg

  publish:
    desc: Publish the NuGet package to the NuGet repository
    vars:
      NUGET_API_KEY: '{{.NUGET_API_KEY| default "NUGET_API_KEY Key not set"}}'
      GITHUB_TOKEN: '{{.GITHUB_TOKEN| default "GITHUB_TOKEN Key not set"}}'
    cmds:
      - dotnet nuget push ./artifacts/*.nupkg --api-key {{ .NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
      - dotnet nuget push ./artifacts/*.nupkg --api-key ${{ .GITHUB_TOKEN }} -s https://nuget.pkg.github.com/lookmumnohandlebars/index.json --skip-duplicate
